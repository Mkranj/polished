% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Polished.R, R/polished_config.R
\name{Polished}
\alias{Polished}
\alias{polished_config}
\alias{global_sessions_config}
\title{R6 class to implement polished authentication}
\usage{
polished_config(...)

global_sessions_config(...)
}
\description{
An instance of this class handles the 'polished' user sessions for each 'shiny'
app using 'polished'.  The 'shiny' developer should not need to interact with
this class directly.
}
\examples{

## ------------------------------------------------
## Method `Polished$new`
## ------------------------------------------------


\dontrun{
# global.R

Polished$new(
  app_name = "<your app name>",
  api_key = "<your API key>"
)

}

}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Polished$new()}}
\item \href{#method-sign_in_social}{\code{Polished$sign_in_social()}}
\item \href{#method-find}{\code{Polished$find()}}
\item \href{#method-sign_in_email}{\code{Polished$sign_in_email()}}
\item \href{#method-register_email}{\code{Polished$register_email()}}
\item \href{#method-refresh_email_verification}{\code{Polished$refresh_email_verification()}}
\item \href{#method-set_signed_in_as}{\code{Polished$set_signed_in_as()}}
\item \href{#method-get_signed_in_as_user}{\code{Polished$get_signed_in_as_user()}}
\item \href{#method-set_inactive}{\code{Polished$set_inactive()}}
\item \href{#method-sign_out}{\code{Polished$sign_out()}}
\item \href{#method-clone}{\code{Polished$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
global configuration for polished authentication
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Polished$new(
  app_name,
  api_key = get_api_key(),
  firebase_config = NULL,
  admin_mode = FALSE,
  is_invite_required = TRUE,
  sign_in_providers = "email",
  is_email_verification_required = TRUE,
  sentry_dsn = NULL,
  cookie_expires = 365L,
  is_auth_required = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{app_name}}{the name of the app.}

\item{\code{api_key}}{the API key. Either from \url{https://polished.tech} or your on premise \code{polished} API
deployment.}

\item{\code{firebase_config}}{a list containing your Firebase project configuration.  This list should have the
following named elements:
\itemize{
\item{\code{apiKey}}
\item{\code{authDomain}}
\item{\code{projectId}}
}}

\item{\code{admin_mode}}{\code{FALSE} by default.  Set to \code{TRUE} to enter the \code{polished} Admin Panel without needing
to register and sign in.  This is useful during development for inviting the first users to your app.
Make sure to set \code{admin_mode = FALSE} before deploying your app.}

\item{\code{is_invite_required}}{\code{TRUE} by default.  Whether or not to require the user to have an
invite before registering/signing in}

\item{\code{sign_in_providers}}{the sign in providers to enable.  Valid values are \code{"google"}
\code{"email"}, \code{"microsoft"}, and/or \code{"facebook"}. Defaults to \code{"email"}.}

\item{\code{is_email_verification_required}}{\code{TRUE} by default.  Whether or not to require the user to
verify their email before accessing your Shiny app.}

\item{\code{sentry_dsn}}{either \code{NULL}, the default, or your Sentry project DSN.}

\item{\code{cookie_expires}}{the number of days before a user's cookie expires.
Set to \code{NULL} to force Sign Out at session end. This argument is passed to
the \code{expires} option in js-cookie: \url{https://github.com/js-cookie/js-cookie#expires}.
Default value is \code{365} (i.e. 1 year)}

\item{\code{is_auth_required}}{\code{TRUE} by default.  Whether or not to require users to be signed
in to access the app.  It can be useful to set this argument to \code{FALSE} if you want to
allow user to do certain actions (such as viewing charts and tables) without signing in,
and only require users to sign in if they want to save data to your database.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This is the primary function for configuring \code{polished}.  It configures your app's instance of
the \code{Polished} class that manages \code{polished} authentication.  Call this function in
your \code{global.R} file.  See \url{https://github.com/Tychobra/polished/blob/master/inst/examples/polished_example_01/global.R}
for a complete example.
}

\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{
\dontrun{
# global.R

Polished$new(
  app_name = "<your app name>",
  api_key = "<your API key>"
)

}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-sign_in_social"></a>}}
\if{latex}{\out{\hypertarget{method-sign_in_social}{}}}
\subsection{Method \code{sign_in_social()}}{
verify the users Firebase JWT and store the session
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Polished$sign_in_social(firebase_token, hashed_cookie)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{firebase_token}}{the Firebase JWT.  This JWT is created client side
(in JavaScript) via \code{firebase.auth()}.}

\item{\code{hashed_cookie}}{the hashed polished cookie.  Used for tracking the user
session.  This cookie is inserted into the "polished.sessions" table if the
JWT is valid.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL if sign in fails. If sign in is successful, a list containing the following:
\itemize{
\item email
\item email_verified
\item is_admin
\item user_uid
\item hashed_cookie
\item session_uid
}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-find"></a>}}
\if{latex}{\out{\hypertarget{method-find}{}}}
\subsection{Method \code{find()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Polished$find(hashed_cookie, page)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-sign_in_email"></a>}}
\if{latex}{\out{\hypertarget{method-sign_in_email}{}}}
\subsection{Method \code{sign_in_email()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Polished$sign_in_email(email, password, hashed_cookie)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-register_email"></a>}}
\if{latex}{\out{\hypertarget{method-register_email}{}}}
\subsection{Method \code{register_email()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Polished$register_email(email, password, hashed_cookie)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-refresh_email_verification"></a>}}
\if{latex}{\out{\hypertarget{method-refresh_email_verification}{}}}
\subsection{Method \code{refresh_email_verification()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Polished$refresh_email_verification(session_uid, firebase_token)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_signed_in_as"></a>}}
\if{latex}{\out{\hypertarget{method-set_signed_in_as}{}}}
\subsection{Method \code{set_signed_in_as()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Polished$set_signed_in_as(session_uid, signed_in_as, user_uid = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_signed_in_as_user"></a>}}
\if{latex}{\out{\hypertarget{method-get_signed_in_as_user}{}}}
\subsection{Method \code{get_signed_in_as_user()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Polished$get_signed_in_as_user(user_uid)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_inactive"></a>}}
\if{latex}{\out{\hypertarget{method-set_inactive}{}}}
\subsection{Method \code{set_inactive()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Polished$set_inactive(session_uid, user_uid)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-sign_out"></a>}}
\if{latex}{\out{\hypertarget{method-sign_out}{}}}
\subsection{Method \code{sign_out()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Polished$sign_out(hashed_cookie)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Polished$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
